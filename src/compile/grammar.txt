Goal            : RootContent $
RootContent     : Content
Content(next)   : Content Node
Content(first)  : Node

Node    : Element
Node    : Tag
Node    : Text

Element                     : "<" ElementCode
ElementCode(begin)          : ElementBeginContent ElementEnd
ElementCode(doctype)        : "!" "DOCTYPE" .ws DoctypeContent ">"
ElementEnd(single)          : "/>"
ElementEnd(block)           : ">" BlockElementContinue
BlockElementContinue        : Content BlockElementClose
BlockElementContinue(empty) : BlockElementClose
BlockElementClose           : "</" ElementNameWS ">"
ElementBeginContent(attr)   : ElementName HtmlAttributes
ElementBeginContent         : ElementName
ElementNameWS               : ElementName .ws
ElementNameWS               : ElementName
ElementName                 : HtmlName
DoctypeContent(list)        : DoctypeContent DoctypeContentItemWs
DoctypeContent(first)       : DoctypeContentItemWs
DoctypeContentItemWs        : DoctypeContentItem .ws
DoctypeContentItemWs        : DoctypeContentItem
DoctypeContentItem(name)    : HtmlName
DoctypeContentItem          : HtmlQuotedConst
HtmlAttributes(list)        : HtmlAttributes HtmlAttributeWS
HtmlAttributes(init)        : .ws
HtmlAttributeWS             : HtmlAttribute .ws
HtmlAttributeWS             : HtmlAttribute
HtmlAttribute(Value)        : HtmlName HtmlAttributeEqValue
HtmlAttribute(Bool)         : HtmlName
HtmlAttributeEqValue        : "=" HtmlAttributeValue
HtmlAttributeValue(Expr)    : TagExpression
HtmlAttributeValue(String)  : HtmlQuotedConst
HtmlAttributeValue(Plain)   : HtmlPlainValue

HtmlName(ns)        : HtmlSimpleName ":" HtmlSimpleName
HtmlName            : HtmlSimpleName
HtmlSimpleName(d)   : HtmlSimpleName "-" HtmlNameWord
HtmlSimpleName      : HtmlNameWord

HtmlQuotedConst     : HtmlQQConst
HtmlQuotedConst     : HtmlQConst

HtmlQQConst         : <"> HtmlQQText <">
HtmlQQConst(empty)  : <"> <">
HtmlQQText(loop)    : HtmlQQText HtmlQQTextPart
HtmlQQText(first)   : HtmlQQTextPart
HtmlQQTextPart(flow): HtmlQuotedContentSafe
HtmlQQTextPart      : HtmlQQTextPartSpec

HtmlQConst          : <'> HtmlQText <'>
HtmlQConst(empty)   : <'> <'>
HtmlQText(loop)     : HtmlQText HtmlQTextPart
HtmlQText(first)    : HtmlQTextPart
HtmlQTextPart(flow) : HtmlQuotedContentSafe
HtmlQTextPart       : HtmlQTextPartSpec

Text(empty)         : .EolWithWs
Text                : .EolWithWs InlineTextWithEolWs
Text                : InlineTextWithEolWs
InlineTextWithEolWs : InlineText .EolWithWs
InlineTextWithEolWs : InlineText

Tag                     : "{" TagContinueAny
TagExpression           : "{" WsTagExpressionContinue
TagContinueAny(comment) : .CommentTagContinue
TagContinueAny          : WsTagContinue
CommentTagContinue      : "#" .CommentTagContent "#}"
CommentTagContinue      : "#" "#}"
WsTagContinue           : .ws TagContinue
WsTagContinue           : TagContinue
TagContinue(Empty)      : "}"
TagContinue(Expr)       : TagExpressionContinue
TagContinue(St)         : "%" StatementContinue
WsTagExpressionContinue : .ws TagExpressionContinue
WsTagExpressionContinue : TagExpressionContinue
TagExpressionContinue   : ExpressionWs .TagEnd
StatementContinue(I)    : InlineStatementContinue
InlineStatementContinue : InlineStatement .WsTagEnd
WsTagEnd                : .ws .TagEnd
WsTagEnd                : .TagEnd
TagEnd                  : "}"

InlineStatement(unknown)    : name

WsExpression    : .ws ExpressionWs
WsExpression    : ExpressionWs
ExpressionWs    : Ternary

Ternary(then)   : LogicOr TernaryThen
Ternary(empty)  : LogicOr
TernaryThen     : "?" .ws TernaryThenElse
TernaryThen     : "?" TernaryThenElse
TernaryThenElse : Ternary ":" .ws Ternary
TernaryThenElse : Ternary ":" Ternary

LogicOr(next)   : LogicOr "||" .ws LogicAnd
LogicOr(next)   : LogicOr "||" LogicAnd
LogicOr(first)  : LogicAnd

LogicAnd(next)  : LogicAnd "&&" .ws ValueWs
LogicAnd(next)  : LogicAnd "&&" ValueWs
LogicAnd(first) : ValueWs

ValueWs         : Value .ws
ValueWs         : Value
Value           : Element
Value           : Variable
Value           : StringLiteral
Value           : "(" WsExpression ")"
Value(not)      : "!" .ws Value
Value(not)      : "!" Value

Variable        : name

StringLiteral   : StringLiteralQQ
StringLiteral   : StringLiteralQ

StringLiteralQQ                 : <"> StringLiteralQQContent <">
StringLiteralQQ(empty)          : <"> <">
StringLiteralQQContent(list)    : StringLiteralQQContent StringLiteralQQPart
StringLiteralQQContent(first)   : StringLiteralQQPart
StringLiteralQQPart(text)       : StringLiteralQQPartText
StringLiteralQQPart(expr)       : "${" WsTagExpressionContinue
StringLiteralQQPart(dollar)     : "$"
StringLiteralQQPartText(list)   : StringLiteralQQPartText StringLiteralQQPartTextChunk
StringLiteralQQPartText(first)  : StringLiteralQQPartTextChunk
StringLiteralQQPartTextChunk    : StringLiteralTextSafe
StringLiteralQQPartTextChunk    : StringLiteralEscape
StringLiteralQQPartTextChunk(q) : <'>

StringLiteralQ                  : <'> StringLiteralQContent <'>
StringLiteralQ(empty)           : <'> <'>
StringLiteralQContent(list)     : StringLiteralQContent StringLiteralQPart
StringLiteralQContent(first)    : StringLiteralQPart
StringLiteralQPart(text)        : StringLiteralQPartText
StringLiteralQPart(expr)        : "${" WsTagExpressionContinue
StringLiteralQPart(dollar)      : "$"
StringLiteralQPartText(list)    : StringLiteralQPartText StringLiteralQPartTextChunk
StringLiteralQPartText(first)   : StringLiteralQPartTextChunk
StringLiteralQPartTextChunk     : StringLiteralTextSafe
StringLiteralQPartTextChunk     : StringLiteralEscape
StringLiteralQPartTextChunk(qq) : <">

StringLiteralEscape     : "\" StringLiteralEscapeCode
StringLiteralEscapeCode : EscapeCodeX
StringLiteralEscapeCode : EscapeCodeU
StringLiteralEscapeCode : EscapeCodeSingleLetter
StringLiteralEscapeCode : EscapeCodePunctuation

EscapeCodeX             : "x" EscapeCodeHex2
EscapeCodeX             : "X" EscapeCodeHex2
EscapeCodeU             : "u" EscapeCodeUCode
EscapeCodeU             : "U" EscapeCodeUCode
EscapeCodeUCode         : EscapeCodeHex4
EscapeCodeUCode         : "{" EscapeCodeHex "}"


HtmlNameWord            : /(?i)[a-z][a-z0-9]*+/
name                    : /(?i)[a-z_][a-z_0-9]*+/
ws                      : /\s++/
InlineText              : /(?:[^\s<>{}]++|\h++(?!\z|\R))++/
CommentTagContent       : /(?:[^#]++|#(?!\}))++/
HtmlQQTextPartSpec      : /'++/
HtmlQTextPartSpec       : /"++/
HtmlQuotedContentSafe   : /[^'"]++/
EolWithWs               : /\h*+(?:\R\h*+)++/
HtmlPlainValue          : /[^<>'"={}\s\/]++|\/(?!>)/
EscapeCodeHex2          : /(?i)[a-f0-9]{2}+/
EscapeCodeHex4          : /(?i)[a-f0-9]{4}+/
EscapeCodeHex           : /(?i)[a-f0-9]++/
EscapeCodeSingleLetter  : /(?i)(?![xu])[a-z]/
EscapeCodePunctuation   : /[-!"#$%&'()*+,.\/:;<=>?@\[\]\\^_`{|}~]/
StringLiteralTextSafe   : /[^'"$\\]++/
